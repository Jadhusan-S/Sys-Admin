BIND Server
Master Configuration :
           hostnamectl set-hostname master.example.com
	1. dnf install bind bind-utils -y
	2. getenforce  
	3. systemctl enable named, start, status
        4. cp  -p /etc/named.conf /etc/named.conf.bak
	5. nano /etc/named.conf
             add our ip add to the loop back add without /24(192.168.1.20)
             add our network ip to the local host without (192.168.1.0/24)
             add allow-transfer { 192.168.1.21; }
        6. named-checkconf
        7. systemctl restart named
           firewall-cmd --add-service=dns --permanent 
        8. firewall-cmd --permanent --add-port=53/tcp
        9. firewall-cmd --permanent --add-port=53/udp
       10. firewall-cmd --reload
       11. firewall-cmd --list-ports
       12. nano /etc/named.conf


zone "example.com" IN {
	type master;
	file "forward.example.com.db";
	allow-update { none; };
        allow-query { any; };
};
zone "1.168.192.in-addr.arpa" IN {
	type master;
	file "reverse.example.com.db";
	allow-update { none; };
        allow-query { any; };
};

	13. nano /var/named/forward.example.com.db

$TTL 86400
@ IN SOA master.example.com. root.example.com. (
                20181022 ; Serial
                3600 ; Refresh
                1800 ; Retry
                604800 ; Expire
                86400 ; Minimum TTL
        )
;Name server-------------------------------
@       IN      NS      master.example.com.
@       IN      NS      slave.example.com.

;IP info-----------------------------------
master  IN      A        192.168.1.20
slave   IN      A        192.168.1.21

;Host devices------------------------------
mail    IN      MX       192.168.1.30
client  IN      A        192.168.1.100

	14. nano /var/named/reverse.example.com.db

$TTL 86400
@ IN SOA master.example.com. root.example.com. (
                20181022 ; Serial
                3600 ;Refresh
                1800 ;Retry
                604800 ;Expire
                86400 ;Minium TTL
        )
;Name server---------------------------------
@       IN      NS      master.example.com.
@       IN      NS      slave.example.com.

;IP info--------------------------------------
master   IN      A      192.168.1.20
slave    IN      A      192.168.1.21

;DNS record-----------------------------------
20       IN      PTR    master.example.com.
21       IN      PTR    slave.example.com.
30       IN      PTR    mail.example.com.
100      IN      PTR    client.example.com.

           systemctl restart named
	7. nano /etc/resolv.conf
               search example.com	     
               nameserver 192.168.1.20
 
	10. named-checkconf 
	14. systemctl restart named
	15. dig anuja.com
	16. ping 192.168.1.21

Slave Configuration :
            hostnamectl set-hostname slave.example.com
 	1.  dnf install bind bind-utils -y
        2.  systemctl enable named, start, status
	2.  cp  -p /etc/named.conf /etc/named.conf.bak
	3.  nano /etc/named.conf 
                loop back(192.168.1.21)
                localhost(192.168.1.0/24)

zone "example.com" IN {
	type slave;
        masters { 192.168.1.20; };
	file "/var/named/slaves/forward.example.com.db";
        allow-query { any; };
};
zone "1.168.192.in-addr.arpa" IN {
	type slave;
        masters { 192.168.1.20; };
	file "/var/named/slaves/reverse.example.com.db";
        allow-query { any; };
};

	4.  nano /etc/resolv.conf 
                search example.com
                nameserver 192.168.1.20
                nameserver 192.168.1.21

	5.  firewall-cmd  --add-service=dns --permanent 
	6.  firewall-cmd  --reload 
	7.  systemctl enable named
	8.  systemctl start named
	9.  systemctl restart named
	10. nano /var/named/slaves
               forward.example.com.db
               reverse.example.com.db
         
	11. ping 192.168.1.20
	12. nslookup master.example.com 192.168.1.20 (in client)
-------------------------------------------------------------------------------
Wndows AD

--------------------------------------------------------------------------------
SAMBA Server
           hostnamectl set-hostname nibm.lk
	1. rpm -qa | grep samba
	2. yum install samba
	3. systemctl status smb
	4. systemctl status nmb
        9. firewall-cmd --permanent --add-port=137/udp
	10. firewall-cmd --permanent --add-port=138/udp
	11. firewall-cmd --permanent --add-port=139/tcp
	12. firewall-cmd --permanent --add-port=445/tcp
	14. firewall-cmd --reload
	5. mkdir -p /hddata
           groupadd NIBM
           chgrp NIBM /hddata/
           useradd -M -s /sbin/nologin tom
           chown 2770 /hddata/
           chown :NIBM /hddata/
           smbpasswd -a tom
           smbpasswd -e tom
           usermod -g NIBM tom
           sudo systemctl restart smb.service
           sudo systemctl restart nmb.service
           (smbclient -L //192.168.202.131 -U tom)

	7. vim /etc/samba/smb.conf

[global]
	workgroup = WORKGROUP
	security = user
[common share]

	comment = Common Share
	path = /samba/common_share
	browsable = yes
	writable = yes
	guest ok = yes
	read only = no

[nibm]
        comment = File Share
        path = /hddata
        browseable = yes
        read only = no
        valid users = @NIBM @tom
        workgroup = NIBM

	8. testparm
           useradd -M -s /sbin/nologin andrew
           smbpasswd -a andrew
           smbpasswd -e andrew
           useradd -M -s /sbin/nologin natasha
           smbpasswd -a natasha
           smbpasswd -e natasha
           mkdir -p optstack
           chown 2770 optstack
           mkdir -p /mnt/smbspace
           chown 2770 optstack
           chown 2770 /mnt/smbspace
       
[optstack]
          comment = File Share
          path = /optstack
          browseable = yes
          read only = no
          read list = natasha
          write list = andrew
          valid users = andrew, natasha
    
          testparm
---------------------------------------------------------------------------------
APACHE Server
Create virtual host
	1. yum install httpd
	2. systemctl enable httpd
	3. systemctl start httpd
	4. systemctl status httpd
	5. mkdir -p /var/www/example1.com/public_html
	6. mkdir -p /var/www/example2.com/public_html
	7. chown -R root:root /var/www/example1.com/public_html
	8. chown -R root:root /var/www/example2.com/public_html
	9. chmod -R 755 /var/www
	10. vim /var/www/example1.com/public_html/index.html

<html>
  <head>
    <title>Welcome to example1.com!</title>
  </head>
  <body>
    <h1>Success! The example1.com virtual host is working!</h1>
  </body>
</html>

	11. vim /var/www/example2.com/public_html/index.html

<html>
  <head>
    <title>Welcome to example2.com!</title>
  </head>
  <body>
    <h1>Success! The example2.com virtual host is working!</h1>
  </body>
</html>

	12. mkdir /etc/httpd/sites-available
	13. mkdir /etc/httpd/sites-enabled
	14. vim /etc/httpd/conf/httpd.conf

 ServerName www.example1.com:80
 ServerName www.example2.com:80

 DocumentRoot "/var/www/example1.com/public_html"
 DocumentRoot "/var/www/example1.com/public_html"

	15. vim /etc/httpd/sites-available/example1.com.conf

<VirtualHost *:80>
        servername www.example1.com
        serveralias example1.com
        documentroot /var/www/example1.com/public_html
        Errorlog /var/www/example1.com/errorlog
        customlog /var/www/example1.com/request.log combined
</VirtualHost>

	16. vim /etc/httpd/sites-available/example2.com.conf

<VirtualHost *:80>
        servername www.example2.com
        serveralias example2.com
        documentroot /var/www/example2.com/public_html
        Errorlog /var/www/example2.com/errorlog
        customlog /var/www/example2.com/request.log combined
</VirtualHost>

	17. ln -s /etc/httpd/sites-available/example1.com.conf /etc/httpd/sites-enabled/example1.com.conf
	18. ln -s /etc/httpd/sites-available/example2.com.conf /etc/httpd/sites-enabled/example2.com.conf
	19. vim /etc/sysconfig/selinux
disabled
	20. vim /etc/hosts

192.168.10.10 www.example1.com
192.168.10.10 www.example2.com

	21. systemctl restart httpd
-------------------------------------------------------------------------------
